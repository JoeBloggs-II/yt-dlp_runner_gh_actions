name: Download YouTube Video with Login

on:
  workflow_dispatch:

jobs:
  download:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20

    - name: Install Playwright and dependencies
      run: |
        npm install -D playwright
        npx playwright install --with-deps

    - name: Install yt-dlp
      run: |
        sudo curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o /usr/local/bin/yt-dlp
        sudo chmod a+rx /usr/local/bin/yt-dlp

    - name: Install Python and conversion tools
      run: |
        sudo apt update
        sudo apt install -y python3-pip
        pip install playwright python-dotenv

    - name: Run Playwright login and export cookies
      env:
        LOGIN_EMAIL: ${{ secrets.LOGIN_EMAIL }}
        LOGIN_PASSWORD: ${{ secrets.LOGIN_PASSWORD }}
      run: |
        cat << 'EOF' > login.mjs
        import { chromium } from 'playwright';
        import fs from 'fs';

        const EMAIL = process.env.LOGIN_EMAIL;
        const PASSWORD = process.env.LOGIN_PASSWORD;

        const run = async () => {
          const browser = await chromium.launch({ headless: true });
          const context = await browser.newContext();
          const page = await context.newPage();

          await page.goto('https://www.youtube.com');

          // Start login flow
          await page.getByRole('link', { name: 'Sign in' }).click();
          await page.getByLabel('Email or phone').fill(EMAIL);
          await page.getByRole('button', { name: /^Next$/ }).click();
          await page.waitForTimeout(2000);
          await page.getByLabel('Enter your password').fill(PASSWORD);
          await page.getByRole('button', { name: /^Next$/ }).click();
          await page.waitForNavigation({ timeout: 15000 });

          const cookies = await context.cookies();
          const netscape = cookies.map(c => [
            c.domain.startsWith('.') ? c.domain : '.' + c.domain,
            'TRUE',
            c.path,
            c.secure ? 'TRUE' : 'FALSE',
            Math.floor(c.expires || 0),
            c.name,
            c.value
          ].join('\t')).join('\n');

          fs.writeFileSync('cookies.txt', '# Netscape HTTP Cookie File\n' + netscape);
          await browser.close();
        };

        run();
        EOF

        node login.mjs

    - name: Create output folder
      run: mkdir -p videos

    - name: Download YouTube video with yt-dlp
      run: |
        yt-dlp --cookies cookies.txt -f "bestvideo+bestaudio/best" --merge-output-format mp4 \
        "https://www.youtube.com/watch?v=zFZ5jQ0yuNA" -o "videos/%(title)s.%(ext)s"

    - name: Upload downloaded video as artifact
      uses: actions/upload-artifact@v3
      with:
        name: downloaded-video
        path: videos/
